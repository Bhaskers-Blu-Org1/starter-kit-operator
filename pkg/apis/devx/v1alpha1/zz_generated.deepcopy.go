// +build !ignore_autogenerated

// Code generated by operator-sdk. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StarterKit) DeepCopyInto(out *StarterKit) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StarterKit.
func (in *StarterKit) DeepCopy() *StarterKit {
	if in == nil {
		return nil
	}
	out := new(StarterKit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StarterKit) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StarterKitList) DeepCopyInto(out *StarterKitList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StarterKit, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StarterKitList.
func (in *StarterKitList) DeepCopy() *StarterKitList {
	if in == nil {
		return nil
	}
	out := new(StarterKitList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StarterKitList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StarterKitSpec) DeepCopyInto(out *StarterKitSpec) {
	*out = *in
	in.Options.DeepCopyInto(&out.Options)
	in.TemplateRepo.DeepCopyInto(&out.TemplateRepo)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StarterKitSpec.
func (in *StarterKitSpec) DeepCopy() *StarterKitSpec {
	if in == nil {
		return nil
	}
	out := new(StarterKitSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StarterKitSpecOptions) DeepCopyInto(out *StarterKitSpecOptions) {
	*out = *in
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StarterKitSpecOptions.
func (in *StarterKitSpecOptions) DeepCopy() *StarterKitSpecOptions {
	if in == nil {
		return nil
	}
	out := new(StarterKitSpecOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StarterKitSpecTemplate) DeepCopyInto(out *StarterKitSpecTemplate) {
	*out = *in
	in.SecretKeyRef.DeepCopyInto(&out.SecretKeyRef)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StarterKitSpecTemplate.
func (in *StarterKitSpecTemplate) DeepCopy() *StarterKitSpecTemplate {
	if in == nil {
		return nil
	}
	out := new(StarterKitSpecTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StarterKitStatus) DeepCopyInto(out *StarterKitStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StarterKitStatus.
func (in *StarterKitStatus) DeepCopy() *StarterKitStatus {
	if in == nil {
		return nil
	}
	out := new(StarterKitStatus)
	in.DeepCopyInto(out)
	return out
}
